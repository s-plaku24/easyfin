name: Daily Stock Analysis

on:
  schedule:
    # Runs every day at 4:00 AM UTC (6 AM Berlin time during winter)
    - cron: '0 4 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  stock-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run stock analysis
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        FMP_API_KEY: ${{ secrets.FMP_API_KEY }}
      run: python main.py
    
    - name: Upload logs (if analysis fails)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs
        path: logs/
        retention-days: 7
    
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Daily Stock Analysis Failed',
            body: 'The automated stock analysis failed. Check the logs for details.',
            labels: ['bug', 'automation']
          })
